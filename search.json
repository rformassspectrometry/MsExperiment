[{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Managing mass spectrometry experiments","text":"goal MsExperiment package store handle data related mass spectrometry experiment. vignette, describe create MsExperiment object populate various types data. also use Spectra package import mass spectrometry data thus load .","code":"library(\"MsExperiment\") library(\"Spectra\")"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"getting-data","dir":"Articles","previous_headings":"","what":"Getting data","title":"Managing mass spectrometry experiments","text":"use small subset PXD022816 project (Morgenstern et al. (2020)). acquisitions correspond Pierce Thermo HeLa digestion standard, diluted 50ng/uL 97:3 + 0.1% formic acid, acquired QExactive instrument. , use rpx package access project PRIDE repository, download files interest. Note automatically cached rpx packages’ cache directory. project provides vendor raw files, converted mzML files well identification mzid files. Let’s download fractions 1 2 mzML files. run commands interactively ’s first time use pxget(), asked create rpx cache directory - can safelfy answer yes. files downloaded. Next time want get files, loaded automatically cache.","code":"library(\"rpx\") px <- PXDataset(\"PXD022816\") ## Loading PXD022816 from cache. px ## Project PXD022816 with 31 files ## ## Resource ID BFC1 in cache in /github/home/.cache/R/rpx. ##  [1] 'checksum.txt' ... [31] 'QEP2LC6_HeLa_50ng_251120_10-calib.mzML' ##  Use 'pxfiles(.)' to see all files. pxfiles(px) ## Project PXD022816 files (31): ##  [remote] checksum.txt ##  [remote] QEP2LC6_HeLa_50ng_251120_01.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_02.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_03.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_04.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_05.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_06.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_07.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_08.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_09.raw ##  ... (i <- grep(\".+0[12].+mzML$\", pxfiles(px), value = TRUE)) ## Project PXD022816 files (31): ##  [remote] checksum.txt ##  [remote] QEP2LC6_HeLa_50ng_251120_01.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_02.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_03.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_04.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_05.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_06.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_07.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_08.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_09.raw ##  ... ## [1] \"QEP2LC6_HeLa_50ng_251120_01-calib.mzML\" ## [2] \"QEP2LC6_HeLa_50ng_251120_02-calib.mzML\" fls <- pxget(px, i) ## Loading QEP2LC6_HeLa_50ng_251120_01-calib.mzML from cache. ## Loading QEP2LC6_HeLa_50ng_251120_02-calib.mzML from cache. fls ## [1] \"/github/home/.cache/R/rpx/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML\" ## [2] \"/github/home/.cache/R/rpx/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzML\""},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"mass-spectrometry-experiment","dir":"Articles","previous_headings":"","what":"Mass spectrometry experiment","title":"Managing mass spectrometry experiments","text":"Let’s start creating empty MsExperiment object populate different pieces data proceed analysis data.","code":"msexp <- MsExperiment() msexp ## Object of class MsExperiment"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"experiment-files","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Experiment files","title":"Managing mass spectrometry experiments","text":"Let’s now start MS experiment management saving relevant files dedicated MsExperimentFiles object. addition mzML files, let’s also assume human proteomics fasta file ready. Later, loading raw data R, refer directly files MsExperimentFiles object. Let’s add files main experiment management object:","code":"msfls <- MsExperimentFiles(mzmls = fls,                            fasta = \"homo_sapiens.fasta\") msfls ## MsExperimentFiles of length  2  ## [[\"mzmls\"]] 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta experimentFiles(msexp) <- msfls msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"experimental-design","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Experimental design","title":"Managing mass spectrometry experiments","text":"colData slot used describe overall experimental design experiment. can used link samples files part experiment. can one--one link sample file, example label-free approaches, one--many, labelled multiplexed approaches. , simply going use colData slot match files respective fractions:","code":"sampleData(msexp) <- DataFrame(mzmls = basename(experimentFiles(msexp)[[\"mzmls\"]]),                                fractions = 1:2) sampleData(msexp) ## DataFrame with 2 rows and 2 columns ##           mzmls fractions ##     <character> <integer> ## 1 6a292c9e4e...         1 ## 2 6a293c05ba...         2"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"raw-data","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Raw data","title":"Managing mass spectrometry experiments","text":"can now create Spectra object containing raw data stored mzML files. familiar Spectra object, please refer package vignettes. can now add object main experiment management object:","code":"sp <- Spectra(experimentFiles(msexp)[[\"mzmls\"]]) sp ## MSn data (Spectra) with 58907 spectra in a MsBackendMzR backend: ##         msLevel     rtime scanIndex ##       <integer> <numeric> <integer> ## 1             1  0.177987         1 ## 2             1  0.599870         2 ## 3             1  0.978849         3 ## 4             1  1.363217         4 ## 5             1  1.742965         5 ## ...         ...       ...       ... ## 58903         2   4198.59     29328 ## 58904         1   4198.74     29329 ## 58905         1   4199.11     29330 ## 58906         1   4199.49     29331 ## 58907         1   4199.87     29332 ##  ... 33 more variables/columns. ##  ## file(s): ## 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ## 6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzML spectra(msexp) <- sp msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s)"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"third-party-applications","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Third party applications","title":"Managing mass spectrometry experiments","text":"Let’s now assume want search spectra mzML files homo_sapiens.fasta file. , like use search engine MSGF+, run using command line generates mzid files. command run MSGF+ look like (see manual page details): can easily build command input file: , sake time portability, actually run MSGF+, simple shell script generate mzid files temporary R directory. cmd variable holds two commands run command line generate new files. can run commands system() function. , add names newly created files experiment: can also decide store commands used generate mzid files experiment’s metadata slot. , use convention name metadata item \"mzmls_to_mzids\" document input output commands. Finally, existMsExperimentFiles() can used time check files associated experiment actually exist:","code":"java -jar /path/to/MSGFPlus.jar \\      -s input.mzML \\      -o output.mzid      -d proteins.fasta \\      -t 20ppm \\ ## precursor mass tolerance      -tda 1 \\   ## search decoy database      -m 0 \\     ## fragmentation method as written in the spectrum or CID if no info      -int 1     ## Orbitrap/FTICR/Lumos mzids <- sub(\"mzML\", \"mzid\", basename(experimentFiles(msexp)[[\"mzmls\"]])) paste0(\"java -jar /path/to/MSGFPlus.jar\",        \" -s \", experimentFiles(msexp)[[\"mzmls\"]],        \" -o \", mzids,        \" -d \", experimentFiles(msexp)[[\"fasta\"]],        \" -t 20ppm\",        \" -m 0\",        \" int 1\") ## [1] \"java -jar /path/to/MSGFPlus.jar -s /github/home/.cache/R/rpx/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML -o 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid -d homo_sapiens.fasta -t 20ppm -m 0 int 1\" ## [2] \"java -jar /path/to/MSGFPlus.jar -s /github/home/.cache/R/rpx/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzML -o 6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzid -d homo_sapiens.fasta -t 20ppm -m 0 int 1\" (output <- file.path(tempdir(), mzids)) ## [1] \"/tmp/RtmpQ53wBj/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"/tmp/RtmpQ53wBj/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" cmd <- paste(\"touch\", output) cmd ## [1] \"touch /tmp/RtmpQ53wBj/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"touch /tmp/RtmpQ53wBj/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" sapply(cmd, system) ## touch /tmp/RtmpQ53wBj/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid  ##                                                                         0  ## touch /tmp/RtmpQ53wBj/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzid  ##                                                                         0 experimentFiles(msexp)[[\"mzids\"]] <- mzids experimentFiles(msexp) ## MsExperimentFiles of length  3  ## [[\"mzmls\"]] 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta ## [[\"mzids\"]] 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid ... msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta, mzids  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s) metadata(msexp)[[\"mzmls_to_mzids\"]] <- cmd metadata(msexp) ## $mzmls_to_mzids ## [1] \"touch /tmp/RtmpQ53wBj/6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"touch /tmp/RtmpQ53wBj/6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" existMsExperimentFiles(msexp) ## mzmls: 2 out of 2 exist(s) ## fasta: 0 out of 1 exist(s) ## mzids: 0 out of 2 exist(s)"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"saving-and-reusing-experiments","dir":"Articles","previous_headings":"","what":"Saving and reusing experiments","title":"Managing mass spectrometry experiments","text":"MsExperiment object used store files data pertaining mass spectrometry experiment. now possible save object reload later recover data metadata. can access raw data long mzML files used generate still exist original location, case saved rpx cache directory.","code":"saveRDS(msexp, \"msexp.rda\") rm(list = ls()) msexp <- readRDS(\"msexp.rda\") msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta, mzids  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s) experimentFiles(msexp) ## MsExperimentFiles of length  3  ## [[\"mzmls\"]] 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta ## [[\"mzids\"]] 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzid ... sp <- spectra(msexp) sp ## MSn data (Spectra) with 58907 spectra in a MsBackendMzR backend: ##         msLevel     rtime scanIndex ##       <integer> <numeric> <integer> ## 1             1  0.177987         1 ## 2             1  0.599870         2 ## 3             1  0.978849         3 ## 4             1  1.363217         4 ## 5             1  1.742965         5 ## ...         ...       ...       ... ## 58903         2   4198.59     29328 ## 58904         1   4198.74     29329 ## 58905         1   4199.11     29330 ## 58906         1   4199.49     29331 ## 58907         1   4199.87     29332 ##  ... 33 more variables/columns. ##  ## file(s): ## 6a292c9e4e95_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ## 6a293c05ba1e_QEP2LC6_HeLa_50ng_251120_02-calib.mzML plotSpectra(sp[1000])"},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"linking-experimental-data-to-samples","dir":"Articles","previous_headings":"","what":"Linking experimental data to samples","title":"Managing mass spectrometry experiments","text":"experiments data analyses explicit link data, data files respective samples required. links enable easy (error-free) subsetting re-ordering whole experiment sample also simplify coloring labeling data depending sample variables conditions. generate MsExperiment object simple experiment consisting single sample measured two different injections LC-MS setup. next add mzML files experiment sample measured. available within msdata R package. add also additional annotation file \"internal_standards.txt\" experiment, e.g. file m/z retention times internal standards added sample (note files don’t necessarily exist). Next load MS data mzML files Spectra object add experiment (see vignette Spectra details import representation MS data). stage thus sample annotations MS data object, explicit relationships . next use linkSpectraData function establish define relationships. First link experimental files samples: want link first mzML file element called \"mzML_file\" object’s experimentFiles first row sampleData second file second row. define link thus specify element within MsExperiment want link samples. can done parameter takes single character representing name (address) data element. name combination name slot within MsExperiment name element (column) within slot separated \".\". Using = \"experimentFiles.mzML_file\" means want link samples values within \"mzML_file\" element object’s experimentFiles slot - words, want link samples values experimentFiles(lmse)$mzML_file. indices rows (samples) sampleData indices values want link samples can defined sampleIndex withIndex. example used sampleIndex = c(1, 2) withIndex = c(1, 2), thus, want link first row sampleData first value second row second value. See also section Linking sample data experimental data documentation MsExperiment information details. happened internally call illustrated figure . link represented two-column integer matrix indices linked sample first indices associated elements second columns (matrix essentially cbind(sampleIndex, withIndex)).  next establish second link sample annotation file \"internal_standards.txt\" experimentFiles(lmse)$standards: figure illustrates happened internally call: new link matrix added establishing relationship two samples one value experimentFiles(lmse)$annotations.  thus also possible link different samples element. next link spectra object individual samples. use alternative way specify link without need provide sampleIndex withIndex. Sample--data links can also specified using syntax similar SQL join: \"sampleData.<column sampleData> = <slot>.<element slot>\". Links thus established elements matching values specified data fields (.e. rows sampleData values specified column matches values <slot>.<element>). order use alternative approach link spectra respective samples first add (full) raw file name additional column object’s sampleData. can now add links spectra samples matching raw file name original file name spectra imported (available \"dataOrigin\" spectra variable). link thus established matching values sampleData(lmse)$raw_file spectra(lmse)$dataOrigin. figure illustrates link. last call thus established links samples 3 different data elements MsExperiment.  also quantified feature values, also link samples. create simple, small SummarizedExperiment represent quantified feature values add experiment. show MsExperiment supports also links subsets data elements, create SummarizedExperiment contains values additional sample present sampleData. Also, add samples arbitrary order. Next link samples SummarizedExperiment samples MsExperiment using matching values \"sample_id\" column object’s sampleData column \"sample\" SummarizedExperiment’s \"sample\" variable. main advantage links subsetting experiment sample keep (linked) data consistent. illustrate subset experiment second sample. subsetted object contains now data elements linked second sample. Accessing assay SummarizedExperiment assay thus return quantified feature abundances second sample. happens data elements linked sample? add data.frame metadata experiment subset object . default, element linked sample retained. next link sample second row data frame subset data second sample. Subsetting thus retained row data frame linked sample. Obviously also possible subset multiple samples, arbitrary order. re-order experiment. sample order thus reversed also linked elements re-ordered accordingly, \"mzML_file\" object’s experimentFiles. however important note, subsetting also duplicate elements associated multiple samples: Thus, added single annotation file data element \"annotations\" experimentFiles, subsetting ended two identical files. duplication n:m relationships samples elements however affect data consistency. sample always linked correct value/element.","code":"lmse <- MsExperiment() sd <- DataFrame(sample_id = c(\"QC1\", \"QC2\"),                 sample_name = c(\"QC Pool\", \"QC Pool\"),                 injection_idx = c(1, 3)) sampleData(lmse) <- sd fls <- dir(system.file(\"sciex\", package = \"msdata\"), full.names = TRUE) basename(fls) ## [1] \"20171016_POOL_POS_1_105-134.mzML\" \"20171016_POOL_POS_3_105-134.mzML\" experimentFiles(lmse) <- MsExperimentFiles(     mzML_files = fls,     annotations = \"internal_standards.txt\") sps <- Spectra(fls, backend = MsBackendMzR()) spectra(lmse) <- sps lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  Experiment data: 2 sample(s) lmse <- linkSampleData(lmse, with = \"experimentFiles.mzML_file\",                         sampleIndex = c(1, 2), withIndex = c(1, 2)) lmse <- linkSampleData(lmse, with = \"experimentFiles.annotations\",                         sampleIndex = c(1, 2), withIndex = c(1, 1)) sampleData(lmse)$raw_file <- normalizePath(fls) lmse <- linkSampleData(     lmse, with = \"sampleData.raw_file = spectra.dataOrigin\") sampleData(lmse)$raw_file ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\" head(spectra(lmse)$dataOrigin) ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [3] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [4] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [5] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [6] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 2 sample(s) to 2 element(s). ##   - experimentFiles.annotations: 2 sample(s) to 1 element(s). ##   - spectra: 2 sample(s) to 1862 element(s). library(SummarizedExperiment) sd <- DataFrame(sample = c(\"QC2\", \"QC1\", \"QC3\"), idx = c(3, 1, 5)) se <- SummarizedExperiment(colData = sd, assay = cbind(1:10, 11:20, 21:30))  lmse@assay <- se sampleData(lmse)$sample_id ## [1] \"QC1\" \"QC2\" lmse@assay$sample ## [1] \"QC2\" \"QC1\" \"QC3\" lmse <- linkSampleData(lmse, with = \"sampleData.sample_id = assay.sample\") lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 2 sample(s) to 2 element(s). ##   - experimentFiles.annotations: 2 sample(s) to 1 element(s). ##   - spectra: 2 sample(s) to 1862 element(s). ##   - assay: 2 sample(s) to 2 column(s). b <- lmse[, 2] b ## Object of class MsExperiment  ##  Files: mzML_files, annotations, mzML_file  ##  Spectra: MS1 (931)  ##  Experiment data: 1 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 1 sample(s) to 1 element(s). ##   - experimentFiles.annotations: 1 sample(s) to 1 element(s). ##   - spectra: 1 sample(s) to 931 element(s). ##   - assay: 1 sample(s) to 1 column(s). assay(b@assay) ##       [,1] ##  [1,]    1 ##  [2,]    2 ##  [3,]    3 ##  [4,]    4 ##  [5,]    5 ##  [6,]    6 ##  [7,]    7 ##  [8,]    8 ##  [9,]    9 ## [10,]   10 metadata(lmse)$other <- data.frame(sample_name = c(\"study_1\", \"POOL\", \"study_2\"),                                   index = 1:3) b <- lmse[, 2] metadata(b) ## $other ##   sample_name index ## 1     study_1     1 ## 2        POOL     2 ## 3     study_2     3 lmse <- linkSampleData(lmse, with = \"metadata.other\",                       sampleIndex = 1:2, withIndex = c(2, 2)) b <- lmse[, 2] metadata(b) ## $other ##   sample_name index ## 2        POOL     2 lmse <- lmse[, c(2, 1)] sampleData(lmse) ## DataFrame with 2 rows and 4 columns ##     sample_id sample_name injection_idx      raw_file ##   <character> <character>     <numeric>   <character> ## 1         QC2     QC Pool             3 /__w/_temp... ## 2         QC1     QC Pool             1 /__w/_temp... experimentFiles(lmse)$mzML_file ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" experimentFiles(lmse)$annotations ## [1] \"internal_standards.txt\" \"internal_standards.txt\""},{"path":"https://rformassspectrometry.github.io/Spectra/articles/MsExperiment.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Managing mass spectrometry experiments","text":"","code":"sessionInfo() ## R Under development (unstable) (2022-01-29 r81593) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 20.04.3 LTS ##  ## Matrix products: default ## BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] SummarizedExperiment_1.25.3 Biobase_2.55.0              ##  [3] GenomicRanges_1.47.6        GenomeInfoDb_1.31.4         ##  [5] IRanges_2.29.1              MatrixGenerics_1.7.0        ##  [7] matrixStats_0.61.0          rpx_2.3.2                   ##  [9] Spectra_1.5.8               BiocParallel_1.29.12        ## [11] S4Vectors_0.33.10           BiocGenerics_0.41.2         ## [13] MsExperiment_0.6.1          ProtGenerics_1.27.2         ## [15] BiocStyle_2.23.1            ##  ## loaded via a namespace (and not attached): ##  [1] bitops_1.0-7                fs_1.5.2                    ##  [3] bit64_4.0.5                 filelock_1.0.2              ##  [5] httr_1.4.2                  rprojroot_2.0.2             ##  [7] tools_4.2.0                 bslib_0.3.1                 ##  [9] utf8_1.2.2                  R6_2.5.1                    ## [11] DBI_1.1.2                   lazyeval_0.2.2              ## [13] withr_2.4.3                 tidyselect_1.1.1            ## [15] bit_4.0.4                   curl_4.3.2                  ## [17] compiler_4.2.0              textshaping_0.3.6           ## [19] cli_3.1.1                   xml2_1.3.3                  ## [21] desc_1.4.0                  DelayedArray_0.21.2         ## [23] bookdown_0.24               sass_0.4.0                  ## [25] rappdirs_0.3.3              pkgdown_2.0.2.9000          ## [27] systemfonts_1.0.3           stringr_1.4.0               ## [29] digest_0.6.29               rmarkdown_2.11              ## [31] XVector_0.35.0              pkgconfig_2.0.3             ## [33] htmltools_0.5.2             highr_0.9                   ## [35] dbplyr_2.1.1                fastmap_1.1.0               ## [37] rlang_1.0.1                 RSQLite_2.2.9               ## [39] jquerylib_0.1.4             generics_0.1.2              ## [41] jsonlite_1.7.3              dplyr_1.0.7                 ## [43] RCurl_1.98-1.5              magrittr_2.0.2              ## [45] GenomeInfoDbData_1.2.7      Matrix_1.4-0                ## [47] Rcpp_1.0.8                  fansi_1.0.2                 ## [49] MsCoreUtils_1.7.1           lifecycle_1.0.1             ## [51] stringi_1.7.6               yaml_2.2.2                  ## [53] MASS_7.3-55                 zlibbioc_1.41.0             ## [55] BiocFileCache_2.3.4         grid_4.2.0                  ## [57] blob_1.2.2                  parallel_4.2.0              ## [59] crayon_1.4.2                lattice_0.20-45             ## [61] mzR_2.29.3                  knitr_1.37                  ## [63] pillar_1.7.0                igraph_1.2.11               ## [65] QFeatures_1.5.2             codetools_0.2-18            ## [67] glue_1.6.1                  evaluate_0.14               ## [69] BiocManager_1.30.16         MultiAssayExperiment_1.21.5 ## [71] vctrs_0.3.8                 purrr_0.3.4                 ## [73] clue_0.3-60                 assertthat_0.2.1            ## [75] cachem_1.0.6                xfun_0.29                   ## [77] AnnotationFilter_1.19.0     ncdf4_1.19                  ## [79] ragg_1.2.1                  tibble_3.1.6                ## [81] memoise_2.0.1               cluster_2.1.2               ## [83] ellipsis_0.3.2"},{"path":"https://rformassspectrometry.github.io/Spectra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laurent Gatto. Author, maintainer. Johannes Rainer. Author. Sebastian Gibb. Author.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gatto L, Rainer J, Gibb S (2022). MsExperiment: Infrastructure Mass Spectrometry Experiments. R package version 0.6.1, https://github.com/RforMassSpectrometry/MsExperiment.","code":"@Manual{,   title = {MsExperiment: Infrastructure for Mass Spectrometry Experiments},   author = {Laurent Gatto and Johannes Rainer and Sebastian Gibb},   year = {2022},   note = {R package version 0.6.1},   url = {https://github.com/RforMassSpectrometry/MsExperiment}, }"},{"path":"https://rformassspectrometry.github.io/Spectra/index.html","id":"managing-mass-spectrometry-experiments","dir":"","previous_headings":"","what":"Infrastructure for Mass Spectrometry Experiments","title":"Infrastructure for Mass Spectrometry Experiments","text":"MsExperiment package provides MsExperiment class can used store manage aspects related complete proteomics metabolomics mass spectrometry experiment. includes experimental design data files raw data: spectra chromatograms proteomics identification results protein database quantitative features respective data handling functionality handled dedicated packages Spectra spectra data, QFeatures quantitative features, Biostrings fasta files, … See package homepage information. package part RforMassSpectrometry initiative: https://www.rformassspectrometry.org/","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Managing Mass Spectrometry Experiments — experimentFiles","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"MsExperiment class allows storage management aspects related complete proteomics metabolomics mass spectrometry experiment. includes experimantal design, raw mass spectromtry data spectra chromatograms, quantitative features, identification data relevant data files. details, see https://rformassspectrometry.github.io/MsExperiment package part RforMassSpectrometry initiative: https://www.rformassspectrometry.org/","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"","code":"experimentFiles(object)  experimentFiles(object) <- value  sampleData(object)  sampleData(object) <- value  MsExperiment()  # S4 method for MsExperiment show(object)  # S4 method for MsExperiment spectra(object)  spectra(object) <- value  # S4 method for MsExperiment metadata(x)  # S4 method for MsExperiment metadata(x) <- value  linkSampleData(   object,   with = character(),   sampleIndex = seq_len(nrow(sampleData(object))),   withIndex = integer(),   subsetBy = 1L )  # S4 method for MsExperiment,ANY,ANY,ANY [(x, i, j, ..., drop = FALSE)"},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"object instance class MsExperiment. value list() replace MsExperiment's metadata. x instance MsExperiment. linkSampleData: character(1) defining data samples linked. See section Linking sample data experimental data details. sampleIndex linkSampleData: integer indices samples sampleData(object) linked. withIndex linkSampleData: integer indices elements samples (specified sampleIndex) linked . subsetBy linkSampleData: optional integer(1) defining dimension subsetting occurr linked data. Defaults subsetBy = 1L thus subsetting happen first dimension (rows elements). [: supported. j [: integer, character logical referring indices names (rowname sampleData) samples subset. ... optional additional parameters. drop [: ignored.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"experimentFiles instance class MsExperimentFiles NULL. spectra instance class Spectra NULL. assay instance class QFeatures, SummarizedExperiment NULL. otherData List store additional data objects. sampleData DataFrame documenting experimental design. sampleDataLinks List link definitions samples data elements. directly accessed modified user. metadata list store additional metadata.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"general-information","dir":"Reference","previous_headings":"","what":"General information","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"experiment typically composed several items Description information (covariates etc) sample experiment. stored sampleData slot DataFrame, row describing sample columns containing relevant information sample. Files data annotations. stored experimentFiles slot instance class MsExperimentFiles. General metadata experiment, stored list metadata slot. Mass spectrometry data. Sectra metadata stored Spectra() object spectra slot. Chromatographic data yet supported stored Chromatograms() object chromatorgrams slot. Quantification data stored QFeatures SummarizedExperiment objects assay slot. additional data, spectra data, proteomics identification data (.e peptide-spectrum matches defined PSM() objects) can added elements list stored otherData slot.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"linking-sample-data-to-other-experimental-data","dir":"Reference","previous_headings":"","what":"Linking sample data to other experimental data","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"start , MsExperiment just loose collection files data related experiment, explicit links associactions present samples related data. links can however created linkSampleData() function. function can establish links individual () samples within object's sampleData individual, multiple, data elements files, Spectra raw data files. presence links enables (consistent) subsetting MsExperiment samples. Thus, link defined, subsetting sample also correctly subset linked data. , linked, data elements always retained original MsExperiment. able link different elements within MsExperiment also required identify consistent naming scheme. naming scheme slots data elements within follows SQL-like scheme, variable (element) identified name database table, followed \".\" name database table column. MsExperiment, naming scheme defined \"<slot name>.<element name>\". column called \"sample_name\" within sampleData data frame can thus addressed \"sampleData.sample_name\", spectra.msLevel represent spectra variable called msLevel within Spectra stored spectra slot. Links sample data rows data element stored integer matrices within sampleDataLinks slot object (see also vignette examples illustrations). links can defined/added linkSampleData function adds relationship rows sampleData elements data within MsExperiment specified parameter . linkSampleData supports two different ways define link: Parameter defines data link established. link samples raw data files example available character element called \"raw_files\" within object's experimentFiles, = experimentFiles.raw_files used. Next required specify samples linked elements . needs defined parameters sampleIndex withIndex, expected integer vectors specifying sample sampleData linked element (see examples vignette examples details). alternative way, link defined SQL-like syntax relates column sampleData column/element data link established. link example individual spectra corresponding samples = \"sampleData.raw_file = spectra.dataOrigin\" used assuming sampleData contains column named \"raw_file\" (full path) raw data file sample spectra imported. case sampleIndex withIndex can omitted, expected/required columns/elements sampleData data element link established contain matching values. Note linkSampleData replace previously existing link data element.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"subsetting-and-filtering","dir":"Reference","previous_headings":"","what":"Subsetting and filtering","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"[: MsExperiment objects can subsetted samples [, j] j index logical defining samples data subsetted. Subsetting sample (correctly) subset linked data respective samples. linked data (slots) returned . Subsetting arbitrary order supported. See vignette details examples.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"Laurent Gatto, Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"","code":"## An empty MsExperiment object msexp <- MsExperiment() msexp #> Object of class MsExperiment   example(MsExperimentFiles) #>  #> MsExpF> fls <- MsExperimentFiles(mzmls = c(\"/path/to/f1.mzML\", \"/path/to/f2.mzML\"), #> MsExpF+                          mzids = \"/another/path/to/id1.mzid\", #> MsExpF+                          fasta = \"file.fas\") #>  #> MsExpF> fls #> MsExperimentFiles of length  3  #> [[\"mzmls\"]] f1.mzML f2.mzML #> [[\"mzids\"]] id1.mzid #> [[\"fasta\"]] file.fas #>  #> MsExpF> ## A new MsExperimentFiles containing mzML or mzid files #> MsExpF> fls[1] #> MsExperimentFiles of length  1  #> [[\"mzmls\"]] f1.mzML f2.mzML #>  #> MsExpF> fls[\"mzids\"] #> MsExperimentFiles of length  1  #> [[\"mzids\"]] id1.mzid #>  #> MsExpF> ## The actual file names #> MsExpF> fls[[1]] #> [1] \"/path/to/f1.mzML\" \"/path/to/f2.mzML\" #>  #> MsExpF> fls[[2]] #> [1] \"/another/path/to/id1.mzid\" #>  #> MsExpF> fls[[\"fasta\"]] #> [1] \"file.fas\" #>  #> MsExpF> ## None of the files used in this example actually exist #> MsExpF> existMsExperimentFiles(fls) #> mzmls: 0 out of 2 exist(s) #> mzids: 0 out of 1 exist(s) #> fasta: 0 out of 1 exist(s) experimentFiles(msexp) <- fls msexp #> Object of class MsExperiment  #>  Files: mzmls, mzids, fasta   ## Linking samples to data elements  ## Create a small experiment library(S4Vectors) #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname mse <- MsExperiment() sd <- DataFrame(sample_id = c(\"QC1\", \"QC2\"),                 sample_name = c(\"QC Pool\", \"QC Pool\"),                 injection_idx = c(1, 3)) sampleData(mse) <- sd  ## define file names containing spectra data for the samples and ## add them, along with other arbitrary files to the experiment fls <- dir(system.file(\"sciex\", package = \"msdata\"), full.names = TRUE) experimentFiles(mse) <- MsExperimentFiles(     mzML_files = fls,     annotations = \"internal_standards.txt\")  ## Link samples to data files: first sample to first file in \"mzML_files\", ## second sample to second file in \"mzML_files\" mse <- linkSampleData(mse, with = \"experimentFiles.mzML_files\",     sampleIndex = c(1, 2), withIndex = c(1, 2))  ## Link all samples to the one file in \"annotations\" mse <- linkSampleData(mse, with = \"experimentFiles.annotations\",     sampleIndex = c(1, 2), withIndex = c(1, 1)) mse #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 2 sample(s) to 2 element(s). #>   - experimentFiles.annotations: 2 sample(s) to 1 element(s).  ## Import the spectra data and add it to the experiment library(Spectra) #> Loading required package: BiocParallel #>  #> Attaching package: ‘Spectra’ #> The following object is masked from ‘package:ProtGenerics’: #>  #>     addProcessing spectra(mse) <- Spectra(fls, backend = MsBackendMzR())  ## Link each spectrum to the respective sample. We use the alternative ## link definition that does not require sampleIndex and withIndex but ## links elements based on matching values in the specified data elements. ## We need to add the full file name as an additional column to sampleData ## in order to allow matching this file names with the value in ## spectra(mse)$dataOrigin which contains the original file names from which ## the spectra were imported. sampleData(mse)$raw_file <- normalizePath(fls)  ## The links can be added using the short notation below mse <- linkSampleData(mse, with = \"sampleData.raw_file = spectra.dataOrigin\") mse #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Spectra: MS1 (1862)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 2 sample(s) to 2 element(s). #>   - experimentFiles.annotations: 2 sample(s) to 1 element(s). #>   - spectra: 2 sample(s) to 1862 element(s).  ## With sampleData links present, any subsetting of the experiment by sample ## will ensure that all linked elements are subsetted accordingly b <- mse[, 2] b #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Spectra: MS1 (931)  #>  Experiment data: 1 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 1 sample(s) to 1 element(s). #>   - experimentFiles.annotations: 1 sample(s) to 1 element(s). #>   - spectra: 1 sample(s) to 931 element(s). sampleData(b) #> DataFrame with 1 row and 4 columns #>     sample_id sample_name injection_idx      raw_file #>   <character> <character>     <numeric>   <character> #> 1         QC2     QC Pool             3 /__w/_temp... experimentFiles(b)$mzML_files #> [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperimentFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"A class to store experiment files — MsExperimentFiles","title":"A class to store experiment files — MsExperimentFiles","text":"MsExperimentFiles class stores files part mass spectrometry experiment. objects created MsExperimentFiles() function. files encoded MsExperimentFiles instance need exist current filesystem - sometimes, might created anticipation creation. existMsExperimentFiles() function can used verify ones currently exist: returns list logicals (formally instance IRanges::LogicalList() lenghts equal MsExperimentFiles used input.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperimentFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A class to store experiment files — MsExperimentFiles","text":"","code":"MsExperimentFiles(..., metadata = list())  # S4 method for MsExperimentFiles show(object)  existMsExperimentFiles(object)"},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperimentFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A class to store experiment files — MsExperimentFiles","text":"... Either named list set named vectors. elements coerced characters. metadata list() holding arbitrary R objects annotations. object existMsExperimentFiles() fonction works either instance MsExperimentFiles MsExperiment.","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperimentFiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A class to store experiment files — MsExperimentFiles","text":"Laurent Gatto","code":""},{"path":"https://rformassspectrometry.github.io/Spectra/reference/MsExperimentFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A class to store experiment files — MsExperimentFiles","text":"","code":"fls <- MsExperimentFiles(mzmls = c(\"/path/to/f1.mzML\", \"/path/to/f2.mzML\"),                          mzids = \"/another/path/to/id1.mzid\",                          fasta = \"file.fas\") fls #> MsExperimentFiles of length  3  #> [[\"mzmls\"]] f1.mzML f2.mzML #> [[\"mzids\"]] id1.mzid #> [[\"fasta\"]] file.fas  ## A new MsExperimentFiles containing mzML or mzid files fls[1] #> MsExperimentFiles of length  1  #> [[\"mzmls\"]] f1.mzML f2.mzML fls[\"mzids\"] #> MsExperimentFiles of length  1  #> [[\"mzids\"]] id1.mzid  ## The actual file names fls[[1]] #> [1] \"/path/to/f1.mzML\" \"/path/to/f2.mzML\" fls[[2]] #> [1] \"/another/path/to/id1.mzid\" fls[[\"fasta\"]] #> [1] \"file.fas\"  ## None of the files used in this example actually exist existMsExperimentFiles(fls) #> mzmls: 0 out of 2 exist(s) #> mzids: 0 out of 1 exist(s) #> fasta: 0 out of 1 exist(s)"}]
