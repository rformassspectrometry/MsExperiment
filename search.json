[{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Managing Mass Spectrometry Experiments","text":"goal MsExperiment package provide container data related mass spectrometry (MS) experiment. Also Bioconductor packages allow represent MS experiment data (MSnbase package). MsExperiment however aims light-weight flexible accommodate possible types MS experiments (proteomics, metabolomics, …) types MS data representations (chromatographic spectral data, quantified features etc). addition, allows bundle additional files data, annotations, within object. vignette, describe create MsExperiment object populate various types data. also use Spectra package import MS data thus load .","code":"library(\"MsExperiment\") library(\"Spectra\")"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Managing Mass Spectrometry Experiments","text":"package can installed BiocManager package. install BiocManager use install.packages(\"BiocManager\") , , BiocManager::install(\"MsExperiment\") install MsExperiment install package including required dependencies.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"getting-data","dir":"Articles","previous_headings":"","what":"Getting data","title":"Managing Mass Spectrometry Experiments","text":"use small subset PXD022816 project (Morgenstern et al. (2020)). acquisitions correspond Pierce Thermo HeLa digestion standard, diluted 50ng/uL 97:3 + 0.1% formic acid, acquired QExactive instrument. , use rpx package access project PRIDE repository, download files interest. Note automatically cached rpx packages’ cache directory. project provides vendor raw files, converted mzML files well identification mzid files. Let’s download fractions 1 2 mzML files. run commands interactively ’s first time use pxget(), asked create rpx cache directory - can safelfy answer yes. files downloaded. Next time want get files, loaded automatically cache.","code":"library(\"rpx\") px <- PXDataset(\"PXD022816\") ## Loading PXD022816 from cache. px ## Project PXD022816 with 32 files ## ## Resource ID BFC1 in cache in /github/home/.cache/R/rpx. ##  [1] 'QEP2LC6_HeLa_50ng_251120_01-calib.mzID.gz' ... [32] 'checksum.txt' ##  Use 'pxfiles(.)' to see all files. pxfiles(px) ## Project PXD022816 files (32): ##  [remote] QEP2LC6_HeLa_50ng_251120_01-calib.mzID.gz ##  [local]  QEP2LC6_HeLa_50ng_251120_01-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_01.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_02-calib.mzID.gz ##  [local]  QEP2LC6_HeLa_50ng_251120_02-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_02.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_03-calib.mzID.gz ##  [remote] QEP2LC6_HeLa_50ng_251120_03-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_03.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_04-calib.mzID.gz ##  ... (i <- grep(\".+0[12].+mzML$\", pxfiles(px), value = TRUE)) ## Project PXD022816 files (32): ##  [remote] QEP2LC6_HeLa_50ng_251120_01-calib.mzID.gz ##  [local]  QEP2LC6_HeLa_50ng_251120_01-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_01.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_02-calib.mzID.gz ##  [local]  QEP2LC6_HeLa_50ng_251120_02-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_02.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_03-calib.mzID.gz ##  [remote] QEP2LC6_HeLa_50ng_251120_03-calib.mzML ##  [remote] QEP2LC6_HeLa_50ng_251120_03.raw ##  [remote] QEP2LC6_HeLa_50ng_251120_04-calib.mzID.gz ##  ... ## [1] \"QEP2LC6_HeLa_50ng_251120_01-calib.mzML\" ## [2] \"QEP2LC6_HeLa_50ng_251120_02-calib.mzML\" fls <- pxget(px, i) ## Loading QEP2LC6_HeLa_50ng_251120_01-calib.mzML from cache. ## Loading QEP2LC6_HeLa_50ng_251120_02-calib.mzML from cache. fls ## [1] \"/github/home/.cache/R/rpx/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML\" ## [2] \"/github/home/.cache/R/rpx/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzML\""},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"mass-spectrometry-experiment","dir":"Articles","previous_headings":"","what":"Mass spectrometry experiment","title":"Managing Mass Spectrometry Experiments","text":"Let’s start creating empty MsExperiment object populate different pieces data proceed analysis data.","code":"msexp <- MsExperiment() msexp ## Empty object of class MsExperiment"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"experiment-files","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Experiment files","title":"Managing Mass Spectrometry Experiments","text":"Let’s now start MS experiment management saving relevant files dedicated MsExperimentFiles object. addition mzML files, let’s also assume human proteomics fasta file ready. Later, loading raw data R, refer directly files MsExperimentFiles object. Let’s add files main experiment management object:","code":"msfls <- MsExperimentFiles(mzmls = fls,                            fasta = \"homo_sapiens.fasta\") msfls ## MsExperimentFiles of length  2  ## [[\"mzmls\"]] 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta experimentFiles(msexp) <- msfls msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"experimental-design","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Experimental design","title":"Managing Mass Spectrometry Experiments","text":"sampleData slot used describe overall experimental design experiment. can used specify samples experiment relate files part experiment. can one--one link sample file, example label-free approaches, one--many, labelled multiplexed approaches. , create simple data frame sample annotations include original file names respective fractions.","code":"sampleData(msexp) <- DataFrame(     mzmls = basename(experimentFiles(msexp)[[\"mzmls\"]]),     fractions = 1:2) sampleData(msexp) ## DataFrame with 2 rows and 2 columns ##           mzmls fractions ##     <character> <integer> ## 1 50b5dbb0f8...         1 ## 2 50b3e0c06f...         2"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"raw-data","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Raw data","title":"Managing Mass Spectrometry Experiments","text":"can now create Spectra object containing raw data stored mzML files. familiar Spectra object, please refer package vignettes. can now add object main experiment management object:","code":"sp <- Spectra(experimentFiles(msexp)[[\"mzmls\"]]) sp ## MSn data (Spectra) with 58907 spectra in a MsBackendMzR backend: ##         msLevel     rtime scanIndex ##       <integer> <numeric> <integer> ## 1             1  0.177987         1 ## 2             1  0.599870         2 ## 3             1  0.978849         3 ## 4             1  1.363217         4 ## 5             1  1.742965         5 ## ...         ...       ...       ... ## 58903         2   4198.59     29328 ## 58904         1   4198.74     29329 ## 58905         1   4199.11     29330 ## 58906         1   4199.49     29331 ## 58907         1   4199.87     29332 ##  ... 33 more variables/columns. ##  ## file(s): ## 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ## 50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzML spectra(msexp) <- sp msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"third-party-applications","dir":"Articles","previous_headings":"Mass spectrometry experiment","what":"Third party applications","title":"Managing Mass Spectrometry Experiments","text":"Let’s now assume want search spectra mzML files homo_sapiens.fasta file. , like use search engine MSGF+, run using command line generates mzid files. command run MSGF+ look like (see manual page details): can easily build command input file: , sake time portability, actually run MSGF+, simple shell script generate mzid files temporary R directory. cmd variable holds two commands run command line generate new files. can run commands system() function. , add names newly created files experiment: can also decide store commands used generate mzid files experiment’s metadata slot. , use convention name metadata item \"mzmls_to_mzids\" document input output commands. Finally, existMsExperimentFiles() can used time check files associated experiment actually exist:","code":"java -jar /path/to/MSGFPlus.jar \\      -s input.mzML \\      -o output.mzid      -d proteins.fasta \\      -t 20ppm \\ ## precursor mass tolerance      -tda 1 \\   ## search decoy database      -m 0 \\     ## fragmentation method as written in the spectrum or CID if no info      -int 1     ## Orbitrap/FTICR/Lumos mzids <- sub(\"mzML\", \"mzid\", basename(experimentFiles(msexp)[[\"mzmls\"]])) paste0(\"java -jar /path/to/MSGFPlus.jar\",        \" -s \", experimentFiles(msexp)[[\"mzmls\"]],        \" -o \", mzids,        \" -d \", experimentFiles(msexp)[[\"fasta\"]],        \" -t 20ppm\",        \" -m 0\",        \" int 1\") ## [1] \"java -jar /path/to/MSGFPlus.jar -s /github/home/.cache/R/rpx/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML -o 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid -d homo_sapiens.fasta -t 20ppm -m 0 int 1\" ## [2] \"java -jar /path/to/MSGFPlus.jar -s /github/home/.cache/R/rpx/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzML -o 50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzid -d homo_sapiens.fasta -t 20ppm -m 0 int 1\" (output <- file.path(tempdir(), mzids)) ## [1] \"/tmp/Rtmpasuby5/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"/tmp/Rtmpasuby5/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" cmd <- paste(\"touch\", output) cmd ## [1] \"touch /tmp/Rtmpasuby5/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"touch /tmp/Rtmpasuby5/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" sapply(cmd, system) ## touch /tmp/Rtmpasuby5/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid  ##                                                                        0  ## touch /tmp/Rtmpasuby5/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzid  ##                                                                        0 experimentFiles(msexp)[[\"mzids\"]] <- mzids experimentFiles(msexp) ## MsExperimentFiles of length  3  ## [[\"mzmls\"]] 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta ## [[\"mzids\"]] 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid ... msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta, mzids  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s) metadata(msexp)[[\"mzmls_to_mzids\"]] <- cmd metadata(msexp) ## $mzmls_to_mzids ## [1] \"touch /tmp/Rtmpasuby5/50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid\" ## [2] \"touch /tmp/Rtmpasuby5/50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzid\" existMsExperimentFiles(msexp) ## mzmls: 2 out of 2 exist(s) ## fasta: 0 out of 1 exist(s) ## mzids: 0 out of 2 exist(s)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"saving-and-reusing-experiments","dir":"Articles","previous_headings":"","what":"Saving and reusing experiments","title":"Managing Mass Spectrometry Experiments","text":"MsExperiment object used store files data pertaining mass spectrometry experiment. now possible save object reload later recover data metadata. See also section Using MsExperiment MsBackendSql alternative load/restore defined MS experiments SQL database. can access raw data long mzML files used generate still exist original location, case saved rpx cache directory.","code":"saveRDS(msexp, \"msexp.rds\") rm(list = ls()) msexp <- readRDS(\"msexp.rds\") msexp ## Object of class MsExperiment  ##  Files: mzmls, fasta, mzids  ##  Spectra: MS1 (12983) MS2 (45924)  ##  Experiment data: 2 sample(s) experimentFiles(msexp) ## MsExperimentFiles of length  3  ## [[\"mzmls\"]] 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ... ## [[\"fasta\"]] homo_sapiens.fasta ## [[\"mzids\"]] 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzid ... sp <- spectra(msexp) sp ## MSn data (Spectra) with 58907 spectra in a MsBackendMzR backend: ##         msLevel     rtime scanIndex ##       <integer> <numeric> <integer> ## 1             1  0.177987         1 ## 2             1  0.599870         2 ## 3             1  0.978849         3 ## 4             1  1.363217         4 ## 5             1  1.742965         5 ## ...         ...       ...       ... ## 58903         2   4198.59     29328 ## 58904         1   4198.74     29329 ## 58905         1   4199.11     29330 ## 58906         1   4199.49     29331 ## 58907         1   4199.87     29332 ##  ... 33 more variables/columns. ##  ## file(s): ## 50b5dbb0f8e_QEP2LC6_HeLa_50ng_251120_01-calib.mzML ## 50b3e0c06f6_QEP2LC6_HeLa_50ng_251120_02-calib.mzML plotSpectra(sp[1000])"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"linking-experimental-data-to-samples","dir":"Articles","previous_headings":"","what":"Linking experimental data to samples","title":"Managing Mass Spectrometry Experiments","text":"experiments data analyses explicit link data, data files respective samples required. links enable easy (error-free) subset re-ordering whole experiment sample also simplify coloring labeling data depending sample variables conditions. generate MsExperiment object simple experiment consisting single sample measured two different injections LC-MS setup. next add mzML files experiment sample measured. available within msdata R package. add also additional annotation file \"internal_standards.txt\" experiment, e.g. file m/z retention times internal standards added sample (note files don’t necessarily exist). Next load MS data mzML files Spectra object add experiment (see vignette Spectra details import representation MS data). stage thus sample annotations MS data object, explicit relationships . Without linking files samples subsetting subset sampleData potentially associated files. next use linkSpectraData function establish define relationships. First link experimental files samples: want link first mzML file element called \"mzML_file\" object’s experimentFiles first row sampleData second file second row. define link thus specify element within MsExperiment want link samples. can done parameter takes single character representing name (address) data element. name combination name slot within MsExperiment name element (column) within slot separated \".\". Using = \"experimentFiles.mzML_file\" means want link samples values within \"mzML_file\" element object’s experimentFiles slot - words, want link samples values experimentFiles(lmse)$mzML_file. indices rows (samples) sampleData indices values want link samples can defined sampleIndex withIndex. example used sampleIndex = c(1, 2) withIndex = c(1, 2), thus, want link first row sampleData first value second row second value. See also section Linking sample data experimental data documentation MsExperiment information details. happened internally call illustrated figure . link represented two-column integer matrix indices linked sample first indices associated elements second columns (matrix essentially cbind(sampleIndex, withIndex)).  next establish second link sample annotation file \"internal_standards.txt\" experimentFiles(lmse)$standards: figure illustrates happened internally call: new link matrix added establishing relationship two samples one value experimentFiles(lmse)$annotations.  thus also possible link different samples element. next link spectra object individual samples. use alternative way specify link without need provide sampleIndex withIndex. Sample--data links can also specified using syntax similar SQL join: \"sampleData.<column sampleData> = <slot>.<element slot>\". Links thus established elements matching values specified data fields (.e. rows sampleData values specified column matches values <slot>.<element>). order use alternative approach link spectra respective samples first add (full) raw file name additional column object’s sampleData. can now add links spectra samples matching raw file name original file name spectra imported (available \"dataOrigin\" spectra variable). link thus established matching values sampleData(lmse)$raw_file spectra(lmse)$dataOrigin. figure illustrates link. last call thus established links samples 3 different data elements MsExperiment.  also quantified feature values, also link samples. create simple, small SummarizedExperiment represent quantified feature values add experiment. show MsExperiment supports also links subsets data elements, create SummarizedExperiment contains values additional sample present sampleData. Also, add samples arbitrary order. Next link samples SummarizedExperiment samples MsExperiment using matching values \"sample_id\" column object’s sampleData data frame column \"sample\" SummarizedExperiment’s colData stored @qdata slot. naming convention define columns <slot name>.<column name>. main advantage links subsetting experiment sample keep (linked) data consistent. illustrate subset experiment second sample. subset object contains now data elements linked second sample. Accessing assay SummarizedExperiment qdata thus return quantified feature abundances second sample. happens data elements linked sample? add data.frame metadata experiment subset object . default, element linked sample retained filtered/subset object. next link sample second row data frame subset data second sample. Subsetting thus retained row data frame linked sample. Obviously also possible subset multiple samples, arbitrary order. re-order experiment. sample order thus reversed also linked elements re-ordered accordingly, \"mzML_file\" object’s experimentFiles. however important note, subsetting also duplicate elements associated multiple samples: Thus, added single annotation file data element \"annotations\" experimentFiles, subsetting ended two identical files. duplication n:m relationships samples elements however affect data consistency. sample always linked correct value/element.","code":"lmse <- MsExperiment() sd <- DataFrame(sample_id = c(\"QC1\", \"QC2\"),                 sample_name = c(\"QC Pool\", \"QC Pool\"),                 injection_idx = c(1, 3)) sampleData(lmse) <- sd fls <- dir(system.file(\"sciex\", package = \"msdata\"), full.names = TRUE) basename(fls) ## [1] \"20171016_POOL_POS_1_105-134.mzML\" \"20171016_POOL_POS_3_105-134.mzML\" experimentFiles(lmse) <- MsExperimentFiles(     mzML_files = fls,     annotations = \"internal_standards.txt\") sps <- Spectra(fls, backend = MsBackendMzR()) spectra(lmse) <- sps lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  Experiment data: 2 sample(s) lmse <- linkSampleData(lmse, with = \"experimentFiles.mzML_file\",                         sampleIndex = c(1, 2), withIndex = c(1, 2)) lmse <- linkSampleData(lmse, with = \"experimentFiles.annotations\",                         sampleIndex = c(1, 2), withIndex = c(1, 1)) sampleData(lmse)$raw_file <- normalizePath(fls) lmse <- linkSampleData(     lmse, with = \"sampleData.raw_file = spectra.dataOrigin\") sampleData(lmse)$raw_file ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\" head(spectra(lmse)$dataOrigin) ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [3] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [4] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [5] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" ## [6] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 2 sample(s) to 2 element(s). ##   - experimentFiles.annotations: 2 sample(s) to 1 element(s). ##   - spectra: 2 sample(s) to 1862 element(s). library(SummarizedExperiment) sd <- DataFrame(sample = c(\"QC2\", \"QC1\", \"QC3\"), idx = c(3, 1, 5)) se <- SummarizedExperiment(colData = sd, assay = cbind(1:10, 11:20, 21:30))  qdata(lmse) <- se sampleData(lmse)$sample_id ## [1] \"QC1\" \"QC2\" qdata(lmse)$sample ## [1] \"QC2\" \"QC1\" \"QC3\" lmse <- linkSampleData(lmse, with = \"sampleData.sample_id = qdata.sample\") lmse ## Object of class MsExperiment  ##  Files: mzML_files, annotations  ##  Spectra: MS1 (1862)  ##  SummarizedExperiment: 10 feature(s) ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 2 sample(s) to 2 element(s). ##   - experimentFiles.annotations: 2 sample(s) to 1 element(s). ##   - spectra: 2 sample(s) to 1862 element(s). ##   - qdata: 2 sample(s) to 2 column(s). b <- lmse[2] b ## Object of class MsExperiment  ##  Files: mzML_files, annotations, mzML_file  ##  Spectra: MS1 (931)  ##  SummarizedExperiment: 10 feature(s) ##  Experiment data: 1 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 1 sample(s) to 1 element(s). ##   - experimentFiles.annotations: 1 sample(s) to 1 element(s). ##   - spectra: 1 sample(s) to 931 element(s). ##   - qdata: 1 sample(s) to 1 column(s). assay(qdata(b)) ##       [,1] ##  [1,]    1 ##  [2,]    2 ##  [3,]    3 ##  [4,]    4 ##  [5,]    5 ##  [6,]    6 ##  [7,]    7 ##  [8,]    8 ##  [9,]    9 ## [10,]   10 metadata(lmse)$other <- data.frame(                   sample_name = c(\"study_1\", \"POOL\", \"study_2\"),                   index = 1:3) b <- lmse[2] metadata(b) ## $other ##   sample_name index ## 1     study_1     1 ## 2        POOL     2 ## 3     study_2     3 lmse <- linkSampleData(lmse, with = \"metadata.other\",                       sampleIndex = 1:2, withIndex = c(2, 2)) b <- lmse[2] metadata(b) ## $other ##   sample_name index ## 2        POOL     2 lmse <- lmse[c(2, 1)] sampleData(lmse) ## DataFrame with 2 rows and 4 columns ##     sample_id sample_name injection_idx      raw_file ##   <character> <character>     <numeric>   <character> ## 1         QC2     QC Pool             3 /__w/_temp... ## 2         QC1     QC Pool             1 /__w/_temp... experimentFiles(lmse)$mzML_file ## [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\" ## [2] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_1_105-134.mzML\" experimentFiles(lmse)$annotations ## [1] \"internal_standards.txt\" \"internal_standards.txt\""},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"subset-and-filter-msexperiment","dir":"Articles","previous_headings":"","what":"Subset and filter MsExperiment","title":"Managing Mass Spectrometry Experiments","text":"already shown , MsExperiment objects can subset [ subset data sample. Depending whether relationships (links) samples data within object present also correctly subset. addition general subset operation, possible individually filter spectra data within MsExperiment using filterSpectra function. function takes filter function supported Spectra parameter filter. Parameters filter function can passed .... example filter spectra data MsExperiment keeping spectra retention time 200 210 seconds. resulting MsExperiment contains now much fewer spectra. filterSpectra filter spectra data, data slots. however update consolidate relationships samples spectra (present) filtering:","code":"#' Filter the Spectra using the `filterRt` function providing also the #' parameters for this function. res <- filterSpectra(lmse, filterRt, rt = c(200, 210)) res ## Object of class MsExperiment  ##  Files: mzML_files, annotations, mzML_file  ##  Spectra: MS1 (72)  ##  SummarizedExperiment: 10 feature(s) ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - experimentFiles.mzML_file: 2 sample(s) to 2 element(s). ##   - experimentFiles.annotations: 2 sample(s) to 2 element(s). ##   - spectra: 2 sample(s) to 72 element(s). ##   - qdata: 2 sample(s) to 2 column(s). ##   - metadata.other: 2 sample(s) to 2 element(s). #' Extract spectra of the second sample after filtering spectra(res[2L]) ## MSn data (Spectra) with 36 spectra in a MsBackendMzR backend: ##       msLevel     rtime scanIndex ##     <integer> <numeric> <integer> ## 1           1   200.049       717 ## 2           1   200.328       718 ## 3           1   200.607       719 ## 4           1   200.886       720 ## 5           1   201.165       721 ## ...       ...       ...       ... ## 32          1   208.698       748 ## 33          1   208.977       749 ## 34          1   209.256       750 ## 35          1   209.535       751 ## 36          1   209.814       752 ##  ... 33 more variables/columns. ##  ## file(s): ## 20171016_POOL_POS_1_105-134.mzML ## Processing: ##  Filter: select retention time [200..210] on MS level(s) 1 [Fri Jan 26 06:53:56 2024]"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"using-msexperiment-with-msbackendsql","dir":"Articles","previous_headings":"","what":"Using MsExperiment with MsBackendSql","title":"Managing Mass Spectrometry Experiments","text":"MsBackendSql provides functionality store mass spectrometry data SQL database represent data Spectra object (MsBackendSql MsBackendOfflineSql backends). Next MS data, also possible store sample data SQL databases hence allowing create self-contained databases MS experiments. simplifies process load pre-defined MS experiment share experiment data across analyses collaborator. section show MS data sample information experiment can stored SQL database data can loaded MsExperiment. first define raw data files experiment. example use two small test files provided msdata package. can use createMsBackendSqlDatabase function MsBackendSql package write data SQLite database. SQLite databases particularly easy create, use also share, large experiments suggested use powerful database engines, example MariaDB (see also documentation vignette MsBackendSql package parameters settings large databases). Also, example store SQLite database data temporary file, real use case want use real file. can now create Spectra object representing MS data database using either MsBackendSql MsBackendOfflineSql backend. Next define sample annotations two files create MsExperiment MS data related sample annotations. Finally link MS spectra individual samples using file names original data files. sample annotations mapping samples spectra defined, can next write information SQL database containing already MS data experiment: dbWriteSampleData function writes, MsExperiment objects use Spectra MsBackendSql (MsBackendOfflineSql) backend available sample data additional database tables database. SQL database now contain MS data, sample annotations mapping samples spectra. Creation database needs performed experiment. associated SQLite database file now shared collaborator used across different analyses without need share copy also raw data files sample annotations (usually needed provided separate file). load MS experiment data R, first need create Spectra object MsBackendSql MsBackendOfflineSql backend SQL database. pass Spectra object parameter spectra MsExperiment constructor call. function read also sample data database (available) well mapping samples spectra restore MS experiment. thus now full MS experiment data available. smaller experiments, SQL databases also created alternative, eventually simpler, approach. first use readMsExperiment function create MsExperiment file names raw MS data files data.frame associated sample annotations. re-use variables fls data file names sdata sample data. MS data MsExperiment represented Spectra object using MsBackendMzR: next change backend Spectra object using setBackend function MsBackendOfflineSql. choose SQLite database format store data temporary file. MS data now stored SQLite database Spectra object experiment uses MsBackendOfflineSql represent/interface data. store also sample data database can use dbWriteSampleData . addition create self-contained SQL databases experiment, code also used within analysis workflow serialize/de-serialize results, always advantage keeping full experiment data single place (file) language-agnostic format. can example use basic functions DBI/RSQLite packages (simple SQL commands) access data database. connect database list available tables. msms_spectrum table contains general metadata individual MS spectra, msms_spectrum_peak_blob actual peak data (m/z intensity values), sample_data sample annotations sample_to_msms_spectrum link samples spectra. retrieve content sample_data table.","code":"fls <- c(system.file(\"microtofq\", \"MM14.mzML\", package = \"msdata\"),          system.file(\"microtofq\", \"MM8.mzML\", package = \"msdata\")) library(MsBackendSql) library(RSQLite)  #' Create the SQLite database where to store the data. For our #' example we create the database in a temporary file. sql_file <- tempfile() con <- dbConnect(SQLite(), dbname = sql_file)  #' Write the MS data to the. createMsBackendSqlDatabase(dbcon = con, fls) ## Importing data ... ##  [==========================================================] 1/1 (100%) in  1s ## Creating indices .... Done ## [1] TRUE #' Load the database as a Spectra object sps <- Spectra(sql_file, source = MsBackendOfflineSql(), drv = SQLite()) sps ## MSn data (Spectra) with 310 spectra in a MsBackendOfflineSql backend: ##       msLevel precursorMz  polarity ##     <integer>   <numeric> <integer> ## 1           1          NA         1 ## 2           1          NA         1 ## 3           1          NA         1 ## 4           1          NA         1 ## 5           1          NA         1 ## ...       ...         ...       ... ## 306         1          NA         1 ## 307         1          NA         1 ## 308         1          NA         1 ## 309         1          NA         1 ## 310         1          NA         1 ##  ... 34 more variables/columns. ##  Use  'spectraVariables' to list all of them. ## Database: /tmp/Rtmpasuby5/file98037497a7a #' Define sample annotations. Ideally all experiment-relavant information #' should be specified. sdata <- data.frame(file_name = basename(fls),                     sample_name = c(\"MM14\", \"MM8\"),                     sample_group = c(\"ctrl\", \"ctrl\"))  #' To simplify subsequent linking between samples and data files we #' define a new spectra variable with the file names of the raw data files. sps$file_name <- basename(dataOrigin(sps))  #' Create the MsExperiment for that data mse <- MsExperiment(sampleData = sdata, spectra = sps) #' Establish the mapping between spectra and samples mse <- linkSampleData(mse, with = \"sampleData.file_name = spectra.file_name\") mse ## Object of class MsExperiment  ##  Spectra: MS1 (310)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - spectra: 2 sample(s) to 310 element(s). #' Write sample data (and mapping between samples and spectra) to the #' database dbWriteSampleData(mse) #' Create a Spectra object for the MS data of that database sps <- Spectra(sql_file, source = MsBackendOfflineSql(), drv = SQLite()) #' Create the MsExperiment reading MS data and sample data from #' the database mse <- MsExperiment(spectra = sps) mse ## Object of class MsExperiment  ##  Spectra: MS1 (310)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - spectra: 2 sample(s) to 310 element(s). #' Create an MsExperiment with data from two (raw) data files #' and associated sample annotations. mse <- readMsExperiment(spectraFiles = fls, sampleData = sdata) mse ## Object of class MsExperiment  ##  Spectra: MS1 (310)  ##  Experiment data: 2 sample(s) ##  Sample data links: ##   - spectra: 2 sample(s) to 310 element(s). #' Show the Spectra from the experiment spectra(mse) ## MSn data (Spectra) with 310 spectra in a MsBackendMzR backend: ##       msLevel     rtime scanIndex ##     <integer> <numeric> <integer> ## 1           1   270.334         1 ## 2           1   270.671         2 ## 3           1   271.007         3 ## 4           1   271.343         4 ## 5           1   271.680         5 ## ...       ...       ...       ... ## 306         1   65.4360       194 ## 307         1   65.7720       195 ## 308         1   66.1092       196 ## 309         1   66.4458       197 ## 310         1   66.7818       198 ##  ... 33 more variables/columns. ##  ## file(s): ## MM14.mzML ## MM8.mzML #' Define the SQLite database file sql_file2 <- tempfile()  #' Change the backend of the Spectra data spectra(mse) <- setBackend(spectra(mse), MsBackendOfflineSql(),                            dbname = sql_file2, drv = SQLite()) ## Importing data ... ##  [==========================================================] 2/2 (100%) in  0s ## Creating indices .... Done spectra(mse) ## MSn data (Spectra) with 310 spectra in a MsBackendOfflineSql backend: ##       msLevel precursorMz  polarity ##     <integer>   <numeric> <integer> ## 1           1          NA         1 ## 2           1          NA         1 ## 3           1          NA         1 ## 4           1          NA         1 ## 5           1          NA         1 ## ...       ...         ...       ... ## 306         1          NA         1 ## 307         1          NA         1 ## 308         1          NA         1 ## 309         1          NA         1 ## 310         1          NA         1 ##  ... 34 more variables/columns. ##  Use  'spectraVariables' to list all of them. ## Database: /tmp/Rtmpasuby5/file9802e66dc7d ## Processing: ##  Switch backend from MsBackendMzR to MsBackendOfflineSql [Fri Jan 26 06:53:59 2024] #' Store also sample data to the database dbWriteSampleData(mse) #' Connect to the database con <- dbConnect(SQLite(), dbname = sql_file2)  #' List the available database tables dbListTables(con) ## [1] \"msms_spectrum\"           \"msms_spectrum_peak_blob\" ## [3] \"sample_data\"             \"sample_to_msms_spectrum\" #' Get the content of the sample_data table dbGetQuery(con, \"select * from sample_data\") ##   file_name sample_name sample_group ## 1 MM14.mzML        MM14         ctrl ## 2  MM8.mzML         MM8         ctrl ##                                   spectraOrigin sample_id_ ## 1 /__w/_temp/Library/msdata/microtofq/MM14.mzML          1 ## 2  /__w/_temp/Library/msdata/microtofq/MM8.mzML          2 #' Close the connection to the database dbDisconnect(con)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/articles/MsExperiment.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Managing Mass Spectrometry Experiments","text":"","code":"sessionInfo() ## R Under development (unstable) (2024-01-17 r85813) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] RSQLite_2.3.5               MsBackendSql_1.3.2          ##  [3] SummarizedExperiment_1.33.3 Biobase_2.63.0              ##  [5] GenomicRanges_1.55.2        GenomeInfoDb_1.39.5         ##  [7] IRanges_2.37.1              MatrixGenerics_1.15.0       ##  [9] matrixStats_1.2.0           rpx_2.9.1                   ## [11] Spectra_1.13.3              BiocParallel_1.37.0         ## [13] S4Vectors_0.41.3            BiocGenerics_0.49.1         ## [15] MsExperiment_1.5.4          ProtGenerics_1.35.2         ## [17] BiocStyle_2.31.0            ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.0            dplyr_1.1.4                 ##  [3] blob_1.2.4                  filelock_1.0.3              ##  [5] bitops_1.0-7                fastmap_1.1.1               ##  [7] lazyeval_0.2.2              RCurl_1.98-1.14             ##  [9] BiocFileCache_2.11.1        digest_0.6.34               ## [11] lifecycle_1.0.4             cluster_2.1.6               ## [13] magrittr_2.0.3              compiler_4.4.0              ## [15] progress_1.2.3              rlang_1.1.3                 ## [17] sass_0.4.8                  tools_4.4.0                 ## [19] igraph_1.6.0                utf8_1.2.4                  ## [21] yaml_2.3.8                  data.table_1.14.10          ## [23] knitr_1.45                  prettyunits_1.2.0           ## [25] S4Arrays_1.3.2              curl_5.2.0                  ## [27] bit_4.0.5                   DelayedArray_0.29.0         ## [29] xml2_1.3.6                  abind_1.4-5                 ## [31] withr_3.0.0                 purrr_1.0.2                 ## [33] desc_1.4.3                  grid_4.4.0                  ## [35] fansi_1.0.6                 MASS_7.3-60.2               ## [37] MultiAssayExperiment_1.29.0 cli_3.6.2                   ## [39] mzR_2.37.1                  rmarkdown_2.25              ## [41] crayon_1.5.2                ragg_1.2.7                  ## [43] generics_0.1.3              httr_1.4.7                  ## [45] ncdf4_1.22                  DBI_1.2.1                   ## [47] cachem_1.0.8                stringr_1.5.1               ## [49] zlibbioc_1.49.0             parallel_4.4.0              ## [51] AnnotationFilter_1.27.0     BiocManager_1.30.22         ## [53] XVector_0.43.1              vctrs_0.6.5                 ## [55] Matrix_1.6-5                jsonlite_1.8.8              ## [57] bookdown_0.37               hms_1.1.3                   ## [59] bit64_4.0.5                 clue_0.3-65                 ## [61] systemfonts_1.0.5           jquerylib_0.1.4             ## [63] glue_1.7.0                  pkgdown_2.0.7.9000          ## [65] codetools_0.2-19            QFeatures_1.13.2            ## [67] stringi_1.8.3               tibble_3.2.1                ## [69] pillar_1.9.0                htmltools_0.5.7             ## [71] GenomeInfoDbData_1.2.11     R6_2.5.1                    ## [73] dbplyr_2.4.0                textshaping_0.3.7           ## [75] evaluate_0.23               lattice_0.22-5              ## [77] highr_0.10                  memoise_2.0.1               ## [79] bslib_0.6.1                 MetaboCoreUtils_1.11.2      ## [81] Rcpp_1.0.12                 SparseArray_1.3.3           ## [83] xfun_0.41                   MsCoreUtils_1.15.3          ## [85] fs_1.6.3                    pkgconfig_2.0.3"},{"path":"https://rformassspectrometry.github.io/MsExperiment/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Laurent Gatto. Author, maintainer. Johannes Rainer. Author. Sebastian Gibb. Author.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gatto L, Rainer J, Gibb S (2024). MsExperiment: Infrastructure Mass Spectrometry Experiments. R package version 1.5.4, https://github.com/RforMassSpectrometry/MsExperiment.","code":"@Manual{,   title = {MsExperiment: Infrastructure for Mass Spectrometry Experiments},   author = {Laurent Gatto and Johannes Rainer and Sebastian Gibb},   year = {2024},   note = {R package version 1.5.4},   url = {https://github.com/RforMassSpectrometry/MsExperiment}, }"},{"path":"https://rformassspectrometry.github.io/MsExperiment/index.html","id":"managing-mass-spectrometry-experiments","dir":"","previous_headings":"","what":"Infrastructure for Mass Spectrometry Experiments","title":"Infrastructure for Mass Spectrometry Experiments","text":"MsExperiment package provides MsExperiment class can used store manage aspects related complete proteomics metabolomics mass spectrometry experiment. includes experimental design data files raw data: spectra chromatograms proteomics identification results protein database quantitative features respective data handling functionality handled dedicated packages Spectra spectra data, QFeatures quantitative features, Biostrings fasta files, … See package homepage information. package part RforMassSpectrometry initiative: https://www.rformassspectrometry.org/","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Infrastructure for Mass Spectrometry Experiments","text":"package can installed ","code":"install.packages(\"BiocManager\") BiocManager::install(\"MsExperiment\")"},{"path":"https://rformassspectrometry.github.io/MsExperiment/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Infrastructure for Mass Spectrometry Experiments","text":"Contributions highly welcome follow contribution guidelines. Also, please check coding style guidelines RforMassSpectrometry vignette.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Managing Mass Spectrometry Experiments — experimentFiles","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"MsExperiment class allows storage management aspects related complete proteomics metabolomics mass spectrometry experiment. includes experimantal design (.e. table samples), raw mass spectromtry data spectra chromatograms, quantitative features, identification data relevant data files. details, see https://rformassspectrometry.github.io/MsExperiment package part RforMassSpectrometry initiative: https://www.rformassspectrometry.org/","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"","code":"experimentFiles(object)  experimentFiles(object) <- value  sampleData(object)  sampleData(object) <- value  qdata(object)  qdata(object) <- value  MsExperiment(   experimentFiles = MsExperimentFiles(),   otherData = List(),   qdata = NULL,   sampleData = DataFrame(),   spectra = NULL )  # S4 method for MsExperiment show(object)  # S4 method for MsExperiment length(x)  # S4 method for MsExperiment spectra(object)  # S4 method for MsExperiment spectra(object) <- value  otherData(object)  otherData(object) <- value  linkSampleData(   object,   with = character(),   sampleIndex = seq_len(nrow(sampleData(object))),   withIndex = integer(),   subsetBy = 1L )  # S4 method for MsExperiment,ANY,ANY,ANY [(x, i, j, ..., drop = FALSE)  # S4 method for MsExperiment,function filterSpectra(object, filter, ...)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"object instance class MsExperiment. value object appropriate class slot populated. experimentFiles MsExperimentFiles() defining (external) files data annotation. otherData List arbitrary additional () information data. qdata QFeatures SummarizedExperiment quantification data. sampleData DataFrame (data.frame) information individual samples experiment. spectra Spectra() object MS spectra data experiment. x MsExperiment. linkSampleData: character(1) defining data samples linked. See section Linking sample data experimental data details. sampleIndex linkSampleData: integer indices samples sampleData(object) linked. withIndex linkSampleData: integer indices elements samples (specified sampleIndex) linked . subsetBy linkSampleData: optional integer(1) defining dimension subsetting occurr linked data. Defaults subsetBy = 1L thus subsetting happen first dimension (rows elements). [: integer, character logical referring indices names (rowname sampleData) samples subset. j [: supported. ... optional additional parameters. filterSpectra: parameters passed filter function (parameter filter). drop [: ignored. filter filterSpectra: filter function supported Spectra() filter spectra object (filterRt filterMsLevel). Parameters filter function can passed ....","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"See help individual functions.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"experimentFiles instance class MsExperimentFiles NULL. spectra instance class Spectra NULL. qdata instance class QFeatures, SummarizedExperiment NULL. otherData List store additional data objects. sampleData DataFrame documenting experimental design. sampleDataLinks List link definitions samples data elements. directly accessed modified user. metadata list store additional metadata.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"general-information","dir":"Reference","previous_headings":"","what":"General information","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"experiment typically composed several items Description information (covariates etc) sample experiment. stored sampleData slot DataFrame, row describing sample columns containing relevant information sample. Files data annotations. stored experimentFiles slot instance class MsExperimentFiles. General metadata experiment, stored list metadata slot. Mass spectrometry data. Sectra metadata stored [Spectra()] object spectra slot. Chromatographic data yet supported stored Chromatograms() object chromatorgrams slot. Quantification data stored QFeatures SummarizedExperiment objects qdata slot can accessed replaced qdata qdata<- functions, respectively. additional data, spectra data, proteomics identification data (.e peptide-spectrum matches defined PSM() objects) can added elements list stored otherData slot. length MsExperiment defined number samples (.e. number rows object's sampleData). MsExperiment two samples thus length two, independently number files length raw data object. also defines subsetting object using [ function always subset samples. See section filtering subsetting information. MsExperiment objects can created using MsExperiment() function providing data parameters listed . Spectra() object provided spectra param uses MsBackendSql backend, sample data retrieved associated SQL database (see section Using MsExperiment MsBackendSql vignette details). Alternatively, also possible subsequently add data information existing MsExperiment. Finally, readMsExperiment() function possible create MsExperiment importing MS spectra data directly provided data files. See examples package vignette information.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"accessing-data","dir":"Reference","previous_headings":"","what":"Accessing data","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"Data MsExperiment object can accessed dedicated accessor functions: experimentFiles, experimentFiles<-: gets sets experiment files. length: get length object represents number samples availble object's sampleData. metadata, metadata<-: gets sets object's metadata. sampleData, sampleData: gets sets object's sample data (.e. DataFrame containing sample descriptions). spectra, spectra<-: gets sets spectra data. spectra returns Spectra() object, spectra<- takes Spectra data input returns updated MsExperiment. qdata, qdata<-: gets sets quantification data, can QFeatures SummarizedExperiment. otherData , otherData<-: gets sets addition data types, stored List object's otherData slot.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"linking-sample-data-to-other-experimental-data","dir":"Reference","previous_headings":"","what":"Linking sample data to other experimental data","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"start , MsExperiment just loose collection files data related experiment, explicit links associactions present samples related data. links can however created linkSampleData() function. function can establish links individual () samples within object's sampleData individual, multiple, data elements files, Spectra raw data files. presence links enables (consistent) subsetting MsExperiment samples. Thus, link defined, subsetting sample also correctly subset linked data. , linked, data elements always retained original MsExperiment. able link different elements within MsExperiment also required identify consistent naming scheme. naming scheme slots data elements within follows SQL-like scheme, variable (element) identified name database table, followed \".\" name database table column. MsExperiment, naming scheme defined \"<slot name>.<element name>\". column called \"sample_name\" within sampleData data frame can thus addressed \"sampleData.sample_name\", spectra.msLevel represent spectra variable called msLevel within Spectra stored spectra slot. Links sample data rows data element stored integer matrices within sampleDataLinks slot object (see also vignette examples illustrations). links can defined/added linkSampleData function adds relationship rows sampleData elements data within MsExperiment specified parameter . linkSampleData supports two different ways define link: Parameter defines data link established. link samples raw data files example available character element called \"raw_files\" within object's experimentFiles, = experimentFiles.raw_files used. Next required specify samples linked elements . needs defined parameters sampleIndex withIndex, expected integer vectors specifying sample sampleData linked element (see examples vignette examples details). alternative way, link defined SQL-like syntax relates column sampleData column/element data link established. link example individual spectra corresponding samples = \"sampleData.raw_file = spectra.dataOrigin\" used assuming sampleData contains column named \"raw_file\" (full path) raw data file sample spectra imported. case sampleIndex withIndex can omitted, expected/required columns/elements sampleData data element link established contain matching values. Note linkSampleData replace previously existing link data element.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"subsetting-and-filtering","dir":"Reference","previous_headings":"","what":"Subsetting and filtering","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"[: MsExperiment objects can subset samples [] index logical defining samples data subset. Subsetting sample (correctly) subset linked data respective samples. multiple samples linked data element, subsetting might duplicate data element. duplication n:m relationships samples elements however affect data consistency (see examples information). linked data (slots) returned . Subsetting arbitrary order supported. See vignette details examples. filterSpectra: subsets Spectra within MsExperiment using provided filter function (parameter filter). Parameters filter function can passed parameter .... filter functions Spectra() object can passed parameter filter. Possibly present relationships samples spectra (links, see also linkSampleData) updated. Filtering affects spectra data object, none slots data (e.g. sampleData) modified. function returns MsExperiment filtered Spectra object.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"Laurent Gatto, Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Managing Mass Spectrometry Experiments — experimentFiles","text":"","code":"## An empty MsExperiment object msexp <- MsExperiment() msexp #> Empty object of class MsExperiment   example(MsExperimentFiles) #>  #> MsExpF> fls <- MsExperimentFiles(mzmls = c(\"/path/to/f1.mzML\", \"/path/to/f2.mzML\"), #> MsExpF+                          mzids = \"/another/path/to/id1.mzid\", #> MsExpF+                          fasta = \"file.fas\") #>  #> MsExpF> fls #> MsExperimentFiles of length  3  #> [[\"mzmls\"]] f1.mzML f2.mzML #> [[\"mzids\"]] id1.mzid #> [[\"fasta\"]] file.fas #>  #> MsExpF> ## A new MsExperimentFiles containing mzML or mzid files #> MsExpF> fls[1] #> MsExperimentFiles of length  1  #> [[\"mzmls\"]] f1.mzML f2.mzML #>  #> MsExpF> fls[\"mzids\"] #> MsExperimentFiles of length  1  #> [[\"mzids\"]] id1.mzid #>  #> MsExpF> ## The actual file names #> MsExpF> fls[[1]] #> [1] \"/path/to/f1.mzML\" \"/path/to/f2.mzML\" #>  #> MsExpF> fls[[2]] #> [1] \"/another/path/to/id1.mzid\" #>  #> MsExpF> fls[[\"fasta\"]] #> [1] \"file.fas\" #>  #> MsExpF> ## None of the files used in this example actually exist #> MsExpF> existMsExperimentFiles(fls) #> mzmls: 0 out of 2 exist(s) #> mzids: 0 out of 1 exist(s) #> fasta: 0 out of 1 exist(s) experimentFiles(msexp) <- fls msexp #> Object of class MsExperiment  #>  Files: mzmls, mzids, fasta   ## Linking samples to data elements  ## Create a small experiment library(S4Vectors) #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname mse <- MsExperiment() sd <- DataFrame(sample_id = c(\"QC1\", \"QC2\"),                 sample_name = c(\"QC Pool\", \"QC Pool\"),                 injection_idx = c(1, 3)) sampleData(mse) <- sd  ## define file names containing spectra data for the samples and ## add them, along with other arbitrary files to the experiment fls <- dir(system.file(\"sciex\", package = \"msdata\"), full.names = TRUE) experimentFiles(mse) <- MsExperimentFiles(     mzML_files = fls,     annotations = \"internal_standards.txt\")  ## Link samples to data files: first sample to first file in \"mzML_files\", ## second sample to second file in \"mzML_files\" mse <- linkSampleData(mse, with = \"experimentFiles.mzML_files\",     sampleIndex = c(1, 2), withIndex = c(1, 2))  ## Link all samples to the one file in \"annotations\" mse <- linkSampleData(mse, with = \"experimentFiles.annotations\",     sampleIndex = c(1, 2), withIndex = c(1, 1)) mse #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 2 sample(s) to 2 element(s). #>   - experimentFiles.annotations: 2 sample(s) to 1 element(s).  ## Import the spectra data and add it to the experiment library(Spectra) #> Loading required package: BiocParallel spectra(mse) <- Spectra(fls, backend = MsBackendMzR())  ## Link each spectrum to the respective sample. We use the alternative ## link definition that does not require sampleIndex and withIndex but ## links elements based on matching values in the specified data elements. ## We need to add the full file name as an additional column to sampleData ## in order to allow matching this file names with the value in ## spectra(mse)$dataOrigin which contains the original file names from which ## the spectra were imported. sampleData(mse)$raw_file <- normalizePath(fls)  ## The links can be added using the short notation below mse <- linkSampleData(mse, with = \"sampleData.raw_file = spectra.dataOrigin\") mse #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Spectra: MS1 (1862)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 2 sample(s) to 2 element(s). #>   - experimentFiles.annotations: 2 sample(s) to 1 element(s). #>   - spectra: 2 sample(s) to 1862 element(s).  ## With sampleData links present, any subsetting of the experiment by sample ## will ensure that all linked elements are subset accordingly b <- mse[2] b #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Spectra: MS1 (931)  #>  Experiment data: 1 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 1 sample(s) to 1 element(s). #>   - experimentFiles.annotations: 1 sample(s) to 1 element(s). #>   - spectra: 1 sample(s) to 931 element(s). sampleData(b) #> DataFrame with 1 row and 4 columns #>     sample_id sample_name injection_idx      raw_file #>   <character> <character>     <numeric>   <character> #> 1         QC2     QC Pool             3 /__w/_temp... experimentFiles(b)$mzML_files #> [1] \"/__w/_temp/Library/msdata/sciex/20171016_POOL_POS_3_105-134.mzML\"  ## Subsetting with duplication of n:m sample to data relationships ## ## Both samples were assigned above to one \"annotation\" file in ## `experimentFiles`: experimentFiles(mse[1])[[\"annotations\"]] #> [1] \"internal_standards.txt\" experimentFiles(mse[2])[[\"annotations\"]] #> [1] \"internal_standards.txt\"  ## Subsetting will always keep the relationship between samples and linked ## data elements. Subsetting will however possibly duplicate data elements ## that are shared among samples. Thus, while in the original object the ## element \"annotations\" has a single entry, subsetting with [1:2] will ## result in an MsExperiment with duplicated entries in \"annotations\" experimentFiles(mse)[[\"annotations\"]] #> [1] \"internal_standards.txt\" experimentFiles(mse[1:2])[[\"annotations\"]] #> [1] \"internal_standards.txt\" \"internal_standards.txt\"  ## Spectra within an MsExperiment can be filtered/subset with the ## `filterSpectra` function and any of the filter functions supported ## by `Spectra` objects. Below we restrict the spectra data to spectra ## with a retention time between 200 and 210 seconds. res <- filterSpectra(mse, filterRt, rt = c(200, 210)) res #> Object of class MsExperiment  #>  Files: mzML_files, annotations  #>  Spectra: MS1 (72)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - experimentFiles.mzML_files: 2 sample(s) to 2 element(s). #>   - experimentFiles.annotations: 2 sample(s) to 1 element(s). #>   - spectra: 2 sample(s) to 72 element(s).  ## The object contains now much less spectra. The retention times for these rtime(spectra(res)) #>  [1] 200.049 200.328 200.607 200.886 201.165 201.444 201.723 202.002 202.281 #> [10] 202.560 202.839 203.118 203.397 203.676 203.955 204.234 204.513 204.792 #> [19] 205.071 205.350 205.629 205.908 206.187 206.466 206.745 207.024 207.303 #> [28] 207.582 207.861 208.140 208.419 208.698 208.977 209.256 209.535 209.814 #> [37] 200.044 200.323 200.602 200.881 201.160 201.439 201.718 201.997 202.276 #> [46] 202.555 202.834 203.113 203.392 203.671 203.950 204.229 204.508 204.787 #> [55] 205.066 205.345 205.624 205.903 206.182 206.461 206.740 207.019 207.298 #> [64] 207.577 207.856 208.135 208.414 208.693 208.972 209.251 209.530 209.809  ## Relationship between samples and spectra was preserved by the filtering a <- res[1L] spectra(a) #> MSn data (Spectra) with 36 spectra in a MsBackendMzR backend: #>       msLevel     rtime scanIndex #>     <integer> <numeric> <integer> #> 1           1   200.049       717 #> 2           1   200.328       718 #> 3           1   200.607       719 #> 4           1   200.886       720 #> 5           1   201.165       721 #> ...       ...       ...       ... #> 32          1   208.698       748 #> 33          1   208.977       749 #> 34          1   209.256       750 #> 35          1   209.535       751 #> 36          1   209.814       752 #>  ... 33 more variables/columns. #>  #> file(s): #> 20171016_POOL_POS_1_105-134.mzML #> Processing: #>  Filter: select retention time [200..210] on MS level(s) 1 [Fri Jan 26 06:53:28 2024]"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"A class to store experiment files — MsExperimentFiles","title":"A class to store experiment files — MsExperimentFiles","text":"MsExperimentFiles class stores files part mass spectrometry experiment. objects created MsExperimentFiles() function. files encoded MsExperimentFiles instance need exist current filesystem - sometimes, might created anticipation creation. existMsExperimentFiles() function can used verify ones currently exist: returns list logicals (formally instance IRanges::LogicalList() lenghts equal MsExperimentFiles used input.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A class to store experiment files — MsExperimentFiles","text":"","code":"MsExperimentFiles(..., metadata = list())  # S4 method for MsExperimentFiles show(object)  existMsExperimentFiles(object)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A class to store experiment files — MsExperimentFiles","text":"... Either named list set named vectors. elements coerced characters. metadata list() holding arbitrary R objects annotations. object existMsExperimentFiles() fonction works either instance MsExperimentFiles MsExperiment.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A class to store experiment files — MsExperimentFiles","text":"MsExperimentFiles returns instance MsExperimentFiles.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A class to store experiment files — MsExperimentFiles","text":"Laurent Gatto","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/MsExperimentFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A class to store experiment files — MsExperimentFiles","text":"","code":"fls <- MsExperimentFiles(mzmls = c(\"/path/to/f1.mzML\", \"/path/to/f2.mzML\"),                          mzids = \"/another/path/to/id1.mzid\",                          fasta = \"file.fas\") fls #> MsExperimentFiles of length  3  #> [[\"mzmls\"]] f1.mzML f2.mzML #> [[\"mzids\"]] id1.mzid #> [[\"fasta\"]] file.fas  ## A new MsExperimentFiles containing mzML or mzid files fls[1] #> MsExperimentFiles of length  1  #> [[\"mzmls\"]] f1.mzML f2.mzML fls[\"mzids\"] #> MsExperimentFiles of length  1  #> [[\"mzids\"]] id1.mzid  ## The actual file names fls[[1]] #> [1] \"/path/to/f1.mzML\" \"/path/to/f2.mzML\" fls[[2]] #> [1] \"/another/path/to/id1.mzid\" fls[[\"fasta\"]] #> [1] \"file.fas\"  ## None of the files used in this example actually exist existMsExperimentFiles(fls) #> mzmls: 0 out of 2 exist(s) #> mzids: 0 out of 1 exist(s) #> fasta: 0 out of 1 exist(s)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/dbWriteSampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","title":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","text":"MsExperiment objects MS data represented Spectra object use MsBackendSql backend, sample annotations can written backend's SQL database dbWriteSampleData function. content object's [sampleData()] (well eventually present linking samples spectra) stored two separate database tables sample_data sample_to_msms_spectrum database. requires MS data experiment represented MsBackendSql backend (see help createMsBackendSqlDatabase MsBackendSql package vignette information create use SQL databases).","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/dbWriteSampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","text":"","code":"dbWriteSampleData(x)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/dbWriteSampleData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","text":"x MsExperiment sample annotations written database.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/dbWriteSampleData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","text":"Johannes Rainer, Laurent Gatto","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/dbWriteSampleData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write sample annotations to a MsBackendSql SQL database — dbWriteSampleData","text":"","code":"library(MsExperiment)  ## Create a MsBackendSql database from two mzML files. ## Connect first to an empty SQLite database (for the example we create ## a database in a temporary file). library(RSQLite) sqlite_db <- tempfile() con <- dbConnect(SQLite(), sqlite_db)  ## Define the files from which we import the data fls <- dir(system.file(\"sciex\", package = \"msdata\"), pattern = \"mzML\",     full.names = TRUE)  ## Create a MsBackendSql database containing the full MS data library(MsBackendSql) createMsBackendSqlDatabase(con, fls) #> Importing data ...  #>  #> [==========================================================] 1/1 (100%) in  2s #>  #> Creating indices  #> . #> . #> . #> . #>  Done #> [1] TRUE  ## Note: alternatively it would be possible to first import the MS data ## to a `Spectra` object and then change the backend to a `MsBackendSql` ## using the `setBackend` function.  ## Load this data as a `Spectra` object (using a `MsBackendOfflineSql` ## backend) library(Spectra) sps <- Spectra(sqlite_db, source = MsBackendOfflineSql(),     drv = SQLite()) sps #> MSn data (Spectra) with 1862 spectra in a MsBackendOfflineSql backend: #>        msLevel precursorMz  polarity #>      <integer>   <numeric> <integer> #> 1            1          NA         1 #> 2            1          NA         1 #> 3            1          NA         1 #> 4            1          NA         1 #> 5            1          NA         1 #> ...        ...         ...       ... #> 1858         1          NA         1 #> 1859         1          NA         1 #> 1860         1          NA         1 #> 1861         1          NA         1 #> 1862         1          NA         1 #>  ... 34 more variables/columns. #>  Use  'spectraVariables' to list all of them. #> Database: /tmp/RtmpJjmFCG/file8ac72d69d5d  ## Define sample annotations for the two data files. Adding one column ## `\"file\"` that contains the file name of the data files. df <- data.frame(sample = c(\"QC1\", \"QC2\"), file = basename(fls))  ## Add a spectra variable `\"file\"` to the `Spectra` object with ## the raw data files' file names to simplify the linking between ## samples and spectra performed later. sps$file <- basename(dataOrigin(sps))  ## Create a MsExperiment with the spectra and sample data. mse <- MsExperiment(spectra = sps, sampleData = df)  ## Establish the link (mapping) between samples and spectra ## using the column `\"file\"` in the `sampleData` and the spectra ## variable `\"file\"`. mse <- linkSampleData(mse, with = \"sampleData.file = spectra.file\") mse #> Object of class MsExperiment  #>  Spectra: MS1 (1862)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - spectra: 2 sample(s) to 1862 element(s).  ## Write sample data (and the sample to spectra mapping) to the ## *MsBackendSql* database. dbWriteSampleData(mse)  ## List the tables in the database dbListTables(con) #> [1] \"msms_spectrum\"           \"msms_spectrum_peak_blob\" #> [3] \"sample_data\"             \"sample_to_msms_spectrum\"  ## Sample data was thus stored to the database. dbGetQuery(con, \"select * from sample_data;\") #>   sample                             file sample_id_ #> 1    QC1 20171016_POOL_POS_1_105-134.mzML          1 #> 2    QC2 20171016_POOL_POS_3_105-134.mzML          2"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Import MS spectra data of an experiment — readMsExperiment","title":"Import MS spectra data of an experiment — readMsExperiment","text":"Read/import MS spectra data experiment respective (raw) data files MsExperiment() object. Files provided spectraFiles parameter imported Spectra object file automatically linked rows (samples) sampleData data frame (provided).","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import MS spectra data of an experiment — readMsExperiment","text":"","code":"readMsExperiment(spectraFiles = character(), sampleData = data.frame(), ...)"},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import MS spectra data of an experiment — readMsExperiment","text":"spectraFiles character (absolute) file names MS data files imported Spectra() object. sampleData data.frame DataFrame sample annotations. row expected contain annotations one file (sample). order data frame's rows expected match order provided files (parameter spectraFiles). ... additional parameters Spectra() call import data.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import MS spectra data of an experiment — readMsExperiment","text":"MsExperiment.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Import MS spectra data of an experiment — readMsExperiment","text":"Johannes Rainer","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/reference/readMsExperiment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import MS spectra data of an experiment — readMsExperiment","text":"","code":"## Define the files of the experiment to import fls <- c(system.file(\"microtofq/MM14.mzML\", package = \"msdata\"),          system.file(\"microtofq/MM8.mzML\", package = \"msdata\"))  ## Define a data frame with some sample annotations ann <- data.frame(     injection_index = 1:2,     sample_id = c(\"MM14\", \"MM8\"))  ## Import the data library(MsExperiment) mse <- readMsExperiment(spectraFiles = fls, ann) mse #> Object of class MsExperiment  #>  Spectra: MS1 (310)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - spectra: 2 sample(s) to 310 element(s).  ## Access the spectra data spectra(mse) #> MSn data (Spectra) with 310 spectra in a MsBackendMzR backend: #>       msLevel     rtime scanIndex #>     <integer> <numeric> <integer> #> 1           1   270.334         1 #> 2           1   270.671         2 #> 3           1   271.007         3 #> 4           1   271.343         4 #> 5           1   271.680         5 #> ...       ...       ...       ... #> 306         1   65.4360       194 #> 307         1   65.7720       195 #> 308         1   66.1092       196 #> 309         1   66.4458       197 #> 310         1   66.7818       198 #>  ... 33 more variables/columns. #>  #> file(s): #> MM14.mzML #> MM8.mzML  ## Access the sample annotations sampleData(mse) #> DataFrame with 2 rows and 3 columns #>   injection_index   sample_id spectraOrigin #>         <integer> <character>   <character> #> 1               1        MM14 /__w/_temp... #> 2               2         MM8 /__w/_temp...  ## Import the data reading all MS spectra directly into memory mse <- readMsExperiment(spectraFiles = fls, ann,     backend = Spectra::MsBackendMemory()) mse #> Object of class MsExperiment  #>  Spectra: MS1 (310)  #>  Experiment data: 2 sample(s) #>  Sample data links: #>   - spectra: 2 sample(s) to 310 element(s)."},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-5","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.5.4","title":"MsExperiment 1.5","text":"Fix missing export filterSpectra.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-5-1","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.5.3","title":"MsExperiment 1.5","text":"Add filterSpectra method allow filtering Spectra within MsExperiment keeping possibly present relationships samples spectra consistent.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-5-2","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.5.2","title":"MsExperiment 1.5","text":"Add support read/write sample data /MsBackendSql database (issue #39).","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-5-3","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.5.1","title":"MsExperiment 1.5","text":"Fix subset negative indices (issue #37.)","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-1","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.1.4","title":"MsExperiment 1.1","text":"Fix improve show,MSnExperiment. New otherData setter getter functions.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-1-1","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.1.3","title":"MsExperiment 1.1","text":"Fix problem unit test.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-1-2","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.1.2","title":"MsExperiment 1.1","text":"Add readMsExperiment function (issue #32).","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-1-3","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.1.1","title":"MsExperiment 1.1","text":"Use S4Vectors::findMatches linkSampleData improves performance, especially larger data sets.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-1-1-4","dir":"Changelog","previous_headings":"","what":"MsExperiment 1.1.0","title":"MsExperiment 1.1","text":"Bioconductor release 3.17 (devel).","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-0-99","dir":"Changelog","previous_headings":"","what":"MsExperiment 0.99.4","title":"MsExperiment 0.99","text":"Import spectra<- ProtGenerics.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-0-99-1","dir":"Changelog","previous_headings":"","what":"MsExperiment 0.99.3","title":"MsExperiment 0.99","text":"Fix assignment default value @experimentFiles slot.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-0-99-2","dir":"Changelog","previous_headings":"","what":"MsExperiment 0.99.2","title":"MsExperiment 0.99","text":"Fix imports. Inherit S4Vectors::Annotated class. Rename @assay slot @qdata. Fix class unions.","code":""},{"path":"https://rformassspectrometry.github.io/MsExperiment/news/index.html","id":"msexperiment-0-99-3","dir":"Changelog","previous_headings":"","what":"MsExperiment 0.99.0","title":"MsExperiment 0.99","text":"Prepare Bioconductor submission.","code":""}]
